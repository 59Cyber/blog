[{"content":"Introduction Yes, you read that correctly! In this post, we\u0026rsquo;ll guide you through the process of creating a website entirely for free using Hugo and Github. Specifically, we\u0026rsquo;ll delve into the setup of the very site you\u0026rsquo;re currently exploring. This step-by-step guide is designed for individuals with limited coding experience or understanding. Despite its technical nature, most of the process is self-explanatory and is relatively straightforward once you\u0026rsquo;ve completed the initial setup.\nPrerequities: Setting Up Your Toolbox Before diving into the website creation process, ensure you have the following tools at your disposal:\n GitHub Account: This will serve as the repository for your code and the hosting platform for your website. Hugo: A crucial tool that enables you to build the website and preview it locally before making it publicly accessible. Git: Essential for \u0026ldquo;pushing\u0026rdquo; your code to GitHub, making version control seamless. Preferred Text Editor: Since all tweaking and post creation involve working with text files, choose a text editor that suits your preferences. I recommend Sublime Text for its user-friendly interface and powerful features.  .notice{padding:18px;line-height:24px;margin-bottom:24px;border-radius:4px;color:#444;background:#e7f2fa}.notice p:last-child{margin-bottom:0}.notice-title{margin:-18px -18px 12px;padding:4px 18px;border-radius:4px 4px 0 0;font-weight:700;color:#fff;background:#6ab0de}.notice.warning .notice-title{background:rgba(217,83,79,.9)}.notice.warning{background:#fae2e2}.notice.info .notice-title{background:#f0b37e}.notice.info{background:#fff2db}.notice.note .notice-title{background:#6ab0de}.notice.note{background:#e7f2fA}.notice.tip .notice-title{background:rgba(92,184,92,.8)}.notice.tip{background:#e6f9e6}.icon-notice{display:inline-flex;align-self:center;margin-right:8px}.icon-notice img,.icon-notice svg{height:1em;width:1em;fill:currentColor}.icon-notice img,.icon-notice.baseline svg{top:0.125em;position:relative}\r\nWhile I\u0026rsquo;ll be using Ubuntu, the commands provided can be adapted to any operating system.\n\rSetting Up Your GitHub Repositories Begin by navigating to GitHub and either signing in or creating a new account. Keep in mind that your GitHub username will be the name of your website. If your current username doesn\u0026rsquo;t align with your desired website name, consider creating a new account with the preferred username. For instance, my site link is https://59cyber.github.io. Once logged in, create Two Repositories:\n  Repository 1: Name it as you wish; this will be the storage for all your code. Ensure that this repository is marked as Private to safeguard your website code from unauthorized access. In my case, I named it CyberWebsite.\n  Repository 2: Give it a more meaningful name, reflecting the purpose of your website. If, like me, you\u0026rsquo;re creating a blog, name it accordingly. This name will be part of your website URL (e.g., https://59cyber.github.io/Blog/). Make sure this repository is marked as Public as this is the repository that GitHub will access to render your site to people.\n  Cloning Your GitHub Repositories Now, let\u0026rsquo;s bring the repositories you created on GitHub to your local device. Follow these steps:\n  Create a Main Folder:\n Before proceeding, establish a central folder where all aspects of your site will be stored.    Navigate and Clone Repositories:\n Using the terminal, navigate to your designated folder. Clone both repositories using the following Git command:  1 2  git clone https://github.com/YOUR_USERNAME/YOUR_PUBLIC_REPOSITORY_NAME.git git clone https://github.com/YOUR_USERNAME/YOUR_PRIVATE__REPOSITORY_NAME.git     1 Handling Private Repository Authentication:\nFor the private repository, you\u0026rsquo;ll need to authenticate yourself during cloning. Upon executing the clone, you\u0026rsquo;ll be prompted for your username and password.\nUse your GitHub username as usual, but your password will be replaced with an access token.\nGenerate Access Token:\n To obtain the access token, navigate to your GitHub profile, then go to Settings \u0026gt; Developer settings \u0026gt; Personal Access Tokens \u0026gt; Tokens (Classic). Generate a new token by entering a note and selecting the main box for repo access. Press \u0026ldquo;Generate\u0026rdquo; at the bottom. A string of characters will be generated. This is your access token.   Finally, enter the access token as your password in the terminal to clone the private repository.    That\u0026rsquo;s it for now! You\u0026rsquo;ve successfully cloned both the public and private repositories to your local environment.\nInstalling and Generating Your Hugo Site Now that GitHub is ready, let\u0026rsquo;s create the website with Hugo. In this step, we\u0026rsquo;ll create the fundamental structure for the site.\n  Intall Hugo\n Install Hugo using the following command:  1  sudo apt install hugo     Or vist Hugo\u0026rsquo;s offical website to download the latest version for your OS.\n Generating a Basic Site\n With Hugo installed, you can now generate your basic site. Navigate to your local private repository through the terminal. Run the following command that will will create essential files for your website structure:  1  hugo new site . --force     You should see some new files appear in the folder and this is the Website! But… we don’t have anything to show yet…\nInstalling a Theme Choosing a theme is a pivotal step in crafting the look and feel of your website. Follow these instructions to seamlessly integrate a theme into your Hugo-powered site:\n  Selecting a Theme\n Visit Hugo Themes and pick a theme that aligns with your preferences. This site was built using Stack, but the installation process is similar for all themes.    Download and Place the Theme\n Download or use Git to pull the theme repository into the \u0026ldquo;themes\u0026rdquo; folder within your project directory.    Configuring the Theme\n Navigate into the theme folder and find the \u0026ldquo;exampleSite\u0026rdquo; folder. Within this folder, find the theme\u0026rsquo;s configuration file (e.g., .yaml for the Stack theme). Copy the configuration file and paste it into your main project folder, overwriting any existing \u0026ldquo;config\u0026rdquo; file.    Run the Site\n In the terminal, navigate to your project directory and run:  1  hugo server     If successful, you\u0026rsquo;ll receive a local IP address. Open your web browser and navigate to this address to preview your website.\n\nIf the server failed to start because the theme could not be found, open the “config” file in the main folder and ensure that the theme name is the exact same as the theme folder.\n\rUpdating the \u0026ldquo;baseurl\u0026rdquo; To ensure your website links correctly to your public GitHub repository, you need to make a quick adjustment in the configuration. Follow these steps:\n  Locate and open the \u0026ldquo;config\u0026rdquo; file in your project folder.\n  Within the file, find the \u0026ldquo;baseurl\u0026rdquo; variable. By default, it might be set to https://example.com.\n  Change the \u0026ldquo;baseurl\u0026rdquo; value to your GitHub public repository URL:\n1  https://github.com/YOUR_USERNAME/YOUR_PUBLIC_REPOSITORY_NAME.git     Save the changes to the file.\n  Now, your website is configured to link seamlessly with your public GitHub repository.\nCreating Your First Post Now, let\u0026rsquo;s dive into the exciting part—creating your first post. Follow these straightforward steps to get started:\n  Utilize Example Content\n Go to the \u0026ldquo;exampleSite\u0026rdquo; folder within your chosen theme. Copy the categories, page, and post from the \u0026ldquo;Content\u0026rdquo; directory. Paste the copied content into the \u0026ldquo;content\u0026rdquo; folder in the main area of your site. Navigate to your project directory in the terminal and run:  1  hugo server     By doing this, you should see the example pages and posts when you open your site.\nCustomize Your Post  Navigate into the \u0026ldquo;posts\u0026rdquo; folder, open an existing post, and modify its contents to suit your preferences. If you\u0026rsquo;re new to Markdown, refer to the Markdown Syntax guide for guidance on formatting. Place any images you use in the same folder as the post\u0026rsquo;s Markdown file.    With these steps, you\u0026rsquo;ve successfully added content to your website. You can now create as many posts to your heart\u0026rsquo;s content!\nPublishing Your Website Your website is ready, and now it\u0026rsquo;s time to share it with the world. Follow these steps to publish it on GitHub:\n  Build and Apply Changes\n Enter your main website folder and run:  1  hugo -t YOUR_THEME # e.g., hugo-theme-stack    This command builds your website, applying any changes without running it locally.    Push to Private Repository\n Push the entire website to your private repository using the following commands:  1  git add . \u0026amp;\u0026amp; git commit -m \u0026#34;Meaningful comment\u0026#34; \u0026amp;\u0026amp; git push origin main    You may be asked to provide your username and email when trying to push. You can add them by using the following commands:  1 2  git config --global user.email \u0026#34;you@example.com\u0026#34; git config --global user.name \u0026#34;Your Name\u0026#34;   (Your password is the token generated earlier)\n  Move to Public Repository\n Inside the main website folder, locate the \u0026ldquo;public\u0026rdquo; folder. This contains the public version of your site. Copy the contents of the public folder to the \u0026ldquo;Blog\u0026rdquo; folder pulled from GitHub:  1  cp -r public/. ../Blog    Next navigate to the public \u0026ldquo;Blog\u0026rdquo; folder and push it to GitHub:  1  git add . \u0026amp;\u0026amp; git commit -m \u0026#34;Meaningful comment\u0026#34; \u0026amp;\u0026amp; git push origin main     Now, your website is publicly accessible on GitHub for everyone to see!\nMaking Your Site Live Congratulations! Your website is ready for the world to see. Follow these final steps to officially host your site on GitHub:\n  Configure GitHub Pages\n Open your public repository, click on \u0026ldquo;Settings\u0026rdquo; at the top, and then select \u0026ldquo;Pages\u0026rdquo; from the left panel. Confirm that the source is set to \u0026ldquo;Deploy from a branch\u0026rdquo; with the branch set to \u0026ldquo;Main\u0026rdquo; and folder set to \u0026ldquo;Root.\u0026rdquo; Save your settings.   Navigate to the \u0026ldquo;Actions\u0026rdquo; tab at the top of the page. Select \u0026ldquo;pages build and deployment.\u0026rdquo; This process may take a moment, but once completed, you\u0026rsquo;ll find the link to your live site!    \nFor the first build, GitHub might take some time to properly render your site. Initially, it may look incomplete, but give it a moment to finalize.\n\rNow, your website is live and accessible to anyone with the link! Share it proudly.\nSummary Congratulations on successfully creating and launching your website using Hugo and GitHub! In this guide, we navigated through GitHub setup, theme installation, content creation, and the final steps to make your site live. Whether it\u0026rsquo;s a personal blog, portfolio, or any other project, you\u0026rsquo;ve now empowered yourself to share your work with the world\n","date":"2023-12-22T00:00:00Z","image":"https://59Cyber.github.io/Blog/p/how-to-make-a-free-website/Hugo_hu32d1899399ed0dbf38c837842d4c5814_35152_120x120_fill_q75_box_smart1.jpg","permalink":"https://59Cyber.github.io/Blog/p/how-to-make-a-free-website/","title":"How To Make A Free Website"},{"content":"For those individuals who have purchased a new Dell Inspiron may find themselves in a world of frustration after a brand-new laptop begins to have trackpad issues almost right out of the box or after a few days/ weeks of use. I am hoping to address what I think the issue is and how I fixed it on my device.\nWhat Is The Issue Upon using the laptop, everything seems to operate normally but after a while the track pad will stop tracking movements and clicks accurately. An instinct is to restart the device but to no avail this does not fix the issue. Looking at the Dell forum, there is over 18 pages worth of discussion (which is daunting) and none of them seem to help my device, but your milage may vary.\nMy Theorises Initially using the device, the trackpad works flawlessly. The trackpad only begins to have issues after the device has been on for a while and has warmed up (this is key). Restarting/ shutting down the device also does not fix the issue but turning it off or putting it to sleep for a while does fix the issue… This suggests that this is not a software/ driver issue but a manufacturing issue.\nThe way the hardware is laid out, the trackpad is placed directly on top of the battery. As you begin to use the device the battery begins to warm up and expand. This results in the battery to press up against the trackpad which would result in inconsistences in tracking. This also makes sense why restarting the device does not fix the issue as the battery does not cool down enough to stop pressing against the trackpad.\nThis is further supported when the trackpad can be replaced, and the issue continues.\nSo how do you fix this from happening?\nSolution .notice{padding:18px;line-height:24px;margin-bottom:24px;border-radius:4px;color:#444;background:#e7f2fa}.notice p:last-child{margin-bottom:0}.notice-title{margin:-18px -18px 12px;padding:4px 18px;border-radius:4px 4px 0 0;font-weight:700;color:#fff;background:#6ab0de}.notice.warning .notice-title{background:rgba(217,83,79,.9)}.notice.warning{background:#fae2e2}.notice.info .notice-title{background:#f0b37e}.notice.info{background:#fff2db}.notice.note .notice-title{background:#6ab0de}.notice.note{background:#e7f2fA}.notice.tip .notice-title{background:rgba(92,184,92,.8)}.notice.tip{background:#e6f9e6}.icon-notice{display:inline-flex;align-self:center;margin-right:8px}.icon-notice img,.icon-notice svg{height:1em;width:1em;fill:currentColor}.icon-notice img,.icon-notice.baseline svg{top:0.125em;position:relative}\r\nThe following will show how to fix the issue by disassembling your device. Only proceed if you are comfortable doing so and in line with your warranty. I am not responsible for any damage you do to your device!\n\rBefore beginning, please reference to the Service Manual for further guidance and illustrations.\nPrepare the device Ensure your device is switched off and is unplugged from any power outlets. You may want to enter service mode Which disconnects the battery from the device by holding B and pressing the power button for 3 seconds. This is not strictly necessary as the battery will be disconnected later. I would also strongly suggest using any ESD protection if available to avoid any static that could harm your device.\nRemove the cover Remove the 8 screws found on the bottom of the device. Note the top two screws in the red circle are captive screws and they will not come out fully as they are attached to the chassis body.\nUsing a plastic scribe, begin at the top left corner to pry the cover off and work around the device till it comes off.\nRemove The Battery Next unplug the ribbon cable situated in the top right corner of the battery. Pull the connector towards you to disconnect it. Then unscrew the 5 screws holding the battery in. Carefully remove the battery and you should now see the touchpad underneath.\nAdjust The Track Pad Finally, I would suggest unscrewing the trackpad and pop it out briefly to make sure it is seated correctly in the chassis.\n\nAt this stage with the trackpad slightly out of the chassis, I still had the battery connected and the device powered on. I did this and confirmed my theory about it being a hardware issue. When out of the chassis, the trackpad work just fine even when just having issues prior taking the device apart!\n\rReassembly Now reinstall the trackpad and the 4 screws that hold it in place. Make sure not to over tighten the screws! ~ Just a little resistance is required. Next install the battery. Now you need to experiment with the tightness of the battery bolts. I began by just lightly screwing them in, however I still had issues. I took the battery back out and tightened them further which worked for me. It’s important that you equally tighten all the screws to avoid stress on the battery. Finally, reinstall the cover and connect the devices charger which will disable service mode automatically.\nConclusion I am surprised that Dell has not figured this issue out and implemented better measures in manufacturing and quality control. It’s a shame to see that so many people are having the same issue and requesting refunds, replacements, or fixes for a device which is otherwise perfectly functional. Using the method described above, I have not had any issues for the best part of 4 months (December 2021) and still going strong, so chances are you may be experiencing the same issue which can be easily fixed!\n","date":"2023-10-14T00:00:00Z","image":"https://59Cyber.github.io/Blog/p/fixing-the-dell-inspiron-16-plus-trackpad/DellIn16_hu52f8774b6a9954869232cae27087e7aa_48306_120x120_fill_q75_box_smart1.jpg","permalink":"https://59Cyber.github.io/Blog/p/fixing-the-dell-inspiron-16-plus-trackpad/","title":"Fixing The Dell Inspiron 16 Plus Trackpad"}]